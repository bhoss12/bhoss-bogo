TUTORIAL: GIT AND GITHUB 1. INSTALLATION - 2018


  


Bookmark and Share


 
bogotobogo.com site search:
Custom Search
 
Git Installation
In this tutorial, we'll go over the command line Git, and then later (section. 6), we'll start using GUI mode Git/GitHub.

I believe learning what's going on behind the scene will eventually help us using Git more efficiently.



Go to http://git-scm.com/ and download git 1.9.4 for Windows.

download_git-scm_com.png

Then, go to the download directory, and run Git-1.9.4-preview20140815.exe to setup Git.

We need to check git-cheetah plugin:

GitSetup.png

Next => Next

On the "Adjusting your Path Environment", we may want to choose "Use git and optional Unix tools from the Windows Command Prompt" => Next => Next => Finish.

That's it.



Git Configuration
Under C:\Program Files\Git directory, we should have the files like this:

Git_Dir.png
Right click on Git Bash on the desk top, to pop up unix style prompt window:


Shell.png



Three stages of File Residency
Git has three main states that your files can reside in: committed, modified, and staged.

Git_Local_Operations.png
image source: http://git-scm.com/


Committed - the data is safely stored in our local database.
Modified - we have changed the file but have not committed it to our database yet.
Staged - we have marked a modified file in its current version to go into our next commit snapshot.



Life Cycle of a File
Each file in our working directory can be in one of two states:

Tracked
Tracked files are files that were in the last snapshot; they can be unmodified, modified, or staged.
Untracked
Untracked files are everything else - any files in our working directory that were not in our last snapshot and are not in our staging area.
FileStatusLifeCycle_Git.png
image source: http://git-scm.com/



When we first clone a repository, all of our files will be tracked and unmodified because we just checked them out and haven't edited anything.

As we edit files, Git sees them as modified, because we've changed them since our last commit. We stage these modified files and then commit all our staged changes, and the cycle repeats.




GIT and GitHub B
Go to GIT and GitHub - 2. add/status/log.

.

Git/GitHub Tutorial
One page express tutorial for GIT and GitHub
Installation
add/status/log
commit and diff
git commit --amend
Deleting and Renaming files
Undoing Things : File Checkout & Unstaging
Reverting commit
Soft Reset - (git reset --soft <SHA key>)
Mixed Reset - Default
Hard Reset - (git reset --hard <SHA key>)
Creating & switching Branches
Fast-forward merge
Rebase & Three-way merge
Merge conflicts with a simple example
GitHub Account and SSH
Uploading to GitHub
GUI
Branching & Merging
Merging conflicts
GIT on Ubuntu and OS X - Focused on Branching
Setting up a remote repository / pushing local project and cloning the remote repo
Fork vs Clone, Origin vs Upstream
Git/GitHub Terminologies
Git/GitHub via SourceTree I : Commit & Push
Git/GitHub via SourceTree II : Branching & Merging
Git/GitHub via SourceTree III : Git Work Flow
Git/GitHub via SourceTree IV : Git Reset
Git Cheat sheet - quick command reference
